#include <iostream>
#include <vector>

using namespace std;

const int MOD = 998244353;

int compute(int a, int b, int x) {
    a %= MOD;
    b %= MOD;

    long long ax = (long long)a * x % MOD;

    int result = (ax + b) % MOD;

    if (result < 0)
        result += MOD;

    return result;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    
    int n;
    cin >> n;

    vector<int> a(n), b(n);

    for (int i = 0; i < n; ++i)
        cin >> a[i];

    for (int i = 0; i < n; ++i)
        cin >> b[i];

    int q;
    cin >> q;
    
    vector<int> results;
    results.reserve(q);

    while (q--) {
        char op;
        cin >> op;

        if (op == 'H') {
            char type;
            int j1, j2;
            cin >> type >> j1 >> j2;
            if (type == 'A')
                swap(a[j1 - 1], a[j2 - 1]);
            else if (type == 'B')
                swap(b[j1 - 1], b[j2 - 1]);
        } else if (op == 'V') {
            int j;
            cin >> j;
            swap(a[j - 1], b[j - 1]);
        } else if (op == '?') {
            int l, r, c;
            cin >> l >> r >> c;
            int result = c;
           for(int i = r-1; i >= l-1; i--){
                result = compute(a[i], b[i], result);
            }
            results.push_back(result);
        }
    }
    
    for(int& result : results){
    	cout<<result<< "\n";
	}

    return 0;
}
